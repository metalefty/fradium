#!/usr/bin/env ruby

require_relative '../lib/fradium'

=begin
        check username        # check if username exists
        create username       # create new user and password
        show username         # show password for username
        showall               # show all users
        showactive            # show active (enabled) users
        showinactive          # show inactive (disabled) users
        modify username       # generate new password for username
        modifyguest username  # generate new guest password for username
        disable username      # disable the user
        dbconsole             # enter database console
=end

SUBCOMMANDS = %{dbconsole}

@f = Fradium.new(host: :localhost, username: :root, database: :new_radius)

def help
  puts "usage: work in progress"
  p ARGV
end

def show_user(username)
  user = @f.find_user(username).first
  printf "%s  %s\n", user['username'], user['value']
end

case ARGV[0]

when 'create'
  help if ARGV[1]&.empty?
  @f.create_user(ARGV[1])
  show_user(ARGV[1])

when 'dbconsole'
  @f.dbconsole

when 'show'
  show_user(ARGV[1])

when 'showall' 
  @f.all_users.each do |e|
    puts e
  end

when 'modify' # change user password
  @f.modify_user(ARGV[1])
  show_user(ARGV[1])

else
  help
end
